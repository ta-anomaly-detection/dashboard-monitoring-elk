version: '3.8'

services:
  web-server-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: web-server-app
    depends_on:
      - web-server-db
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
    ports:
      - "3000:3000"
    volumes:
      - app-data:/var/app/logs
    restart: unless-stopped
    networks:
      - elk-monitor-network

  web-server-db:
    image: postgres:17
    container_name: web-server-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/migrations:/migrations
      - ./run-migrations.sh:/docker-entrypoint-initdb.d/01_run_migrations.sh
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - elk-monitor-network

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.13.4
    container_name: filebeat
    user: root
    ports:
      - "5066:5066"
    volumes:
      - ./filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro
      - app-data:/var/app/logs:ro
      - filebeat-data:/usr/share/filebeat/data 
    command: [ "--strict.perms=false" ]
    depends_on:
      - web-server-app
    networks:
      - elk-monitor-network

volumes:
  app-data: {}
  pgdata:
  filebeat-data: {}

networks:
  elk-monitor-network:
    name: elk-monitor-network
    driver: bridge
